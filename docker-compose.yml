version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2182'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_COMPACT: "true"
      CONNECT_OFFSET_STORAGE_COMPACT: "true"
      CONNECT_STATUS_STORAGE_COMPACT: "true"

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8084:8080"
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2182
      KAFKA_CLUSTERS_0_NAME: local2
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_1234
      POSTGRES_DB: Authentication
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  authservice:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    ports:
      - "9090:9090"  
    depends_on:
      - postgres
      - kafka

  notificationservice:
    build:
      context: .
      dockerfile: NotificationService/Dockerfile
    depends_on:
      - kafka
      - authservice
    command: sh -c "sleep 30 && ./notificationservice"

volumes:
  zookeeper_data:
  postgres_data: