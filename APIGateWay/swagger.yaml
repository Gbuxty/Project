openapi: 3.0.0
info:
  title: "My Api"
  description: API for managing users and posts
  version: "1.0.0"
servers:
  - url: http://localhost:8080
    description: Local Server
paths:
  /register:
    post:
      summary: Register a new user
      description: Register a new user with email, password, and repeat_password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request body
        '409':
          description: User already exists
  /login:
    post:
      summary: Login user
      description: Authenticate user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: User authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid request body
        '401':
          description: Invalid credentials
  /logout:
    post:
      summary: Logout user
      description: Invalidate user session by user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
      responses:
        '200':
          description: User logged out successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
  /refresh:
    post:
      summary: Refresh access token
      description: Refresh expired access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: Invalid request body
        '401':
          description: Invalid refresh token
  /me:
    get:
      summary: Get current user info
      description: Returns information about the currently authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /confirm-email:
    post:
      summary: Confirm user email
      description: Confirm user email using confirmation code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailRequest'
      responses:
        '200':
          description: Email confirmed successfully
        '400':
          description: Invalid request body
        '404':
          description: Confirmation code not found
components:
  schemas:
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        repeat_password:
          type: string
      required:
        - email
        - password
        - repeat_password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
    LogoutRequest:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    LogoutResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    RefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string
      required:
        - refresh_token
    RefreshResponse:
      type: object
      properties:
        access_token:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
      required:
        - id
        - email
    ConfirmEmailRequest:
      type: object
      properties:
        code:
          type: string
      required:
        - code
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT